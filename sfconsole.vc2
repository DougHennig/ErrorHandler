*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="sfconsole.vcx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS sfconsoleform AS form 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="Pixels" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="edtCode" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdExecute" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdClear" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdPrevious" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdNext" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdLoad" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkImmediate" UniqueID="" Timestamp="" />

	#INCLUDE "sfctrls.h"
	*<DefinedPropArrayMethod>
		*m: clear		&& Clears the edit box
		*m: execute		&& Executes the code
		*m: getcode		&& Displays a code item
		*m: refreshbuttons		&& Refreshes the command buttons
		*p: lexecuteimmediately		&& .T. to execute code when Enter is pressed
		*p: ncode		&& A counter for the current code item
		*a: acode[1,0]		&& An array of code the user entered
		*p: _memberdata
	*</DefinedPropArrayMethod>

	AllowOutput = .F.
	AutoCenter = .T.
	Caption = "Command Console"
	Desktop = .T.
	DoCreate = .T.
	Height = 267
	lexecuteimmediately = .T.		&& .T. to execute code when Enter is pressed
	MaxButton = .F.
	MinButton = .F.
	MinHeight = 267
	MinWidth = 354
	Name = "sfconsoleform"
	ncode = 1		&& A counter for the current code item
	ShowTips = .T.
	ShowWindow = 1
	Width = 354
	_memberdata = <VFPData>
		<memberdata name="acode" type="property" display="aCode"/>
		<memberdata name="clear" type="method" display="Clear"/>
		<memberdata name="execute" type="method" display="Execute"/>
		<memberdata name="getcode" type="method" display="GetCode"/>
		<memberdata name="lexecuteimmediately" type="property" display="lExecuteImmediately"/>
		<memberdata name="ncode" type="property" display="nCode"/>
		<memberdata name="refreshbuttons" type="method" display="RefreshButtons"/>
		</VFPData>

	ADD OBJECT 'chkImmediate' AS checkbox WITH ;
		Alignment = 0, ;
		Anchor = 4, ;
		AutoSize = .T., ;
		BackStyle = 0, ;
		Caption = "Emulate Command Window", ;
		ControlSource = "Thisform.lExecuteImmediately", ;
		FontName = "Segoe UI", ;
		Height = 17, ;
		Left = 10, ;
		Name = "chkImmediate", ;
		TabIndex = 2, ;
		ToolTipText = "If this is checked, the current line is executed upon pressing Enter", ;
		Top = 205, ;
		Width = 168
		*< END OBJECT: BaseClass="checkbox" />

	ADD OBJECT 'cmdClear' AS commandbutton WITH ;
		Anchor = 4, ;
		Caption = "Clear", ;
		FontName = "Segoe UI", ;
		Height = 27, ;
		Left = 105, ;
		Name = "cmdClear", ;
		TabIndex = 4, ;
		Top = 232, ;
		Width = 84
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdExecute' AS commandbutton WITH ;
		Anchor = 4, ;
		Caption = "Execute", ;
		FontName = "Segoe UI", ;
		Height = 27, ;
		Left = 10, ;
		Name = "cmdExecute", ;
		TabIndex = 3, ;
		Top = 232, ;
		Width = 84
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdLoad' AS commandbutton WITH ;
		Anchor = 4, ;
		Caption = "Load", ;
		FontName = "Segoe UI", ;
		Height = 27, ;
		Left = 260, ;
		Name = "cmdLoad", ;
		TabIndex = 7, ;
		Top = 232, ;
		Width = 84
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdNext' AS commandbutton WITH ;
		Anchor = 4, ;
		Caption = "à", ;
		FontName = "Wingdings", ;
		Height = 27, ;
		Left = 225, ;
		Name = "cmdNext", ;
		TabIndex = 6, ;
		Top = 232, ;
		Width = 25
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'cmdPrevious' AS commandbutton WITH ;
		Anchor = 4, ;
		Caption = "ß", ;
		FontName = "Wingdings", ;
		Height = 27, ;
		Left = 200, ;
		Name = "cmdPrevious", ;
		TabIndex = 5, ;
		Top = 232, ;
		Width = 25
		*< END OBJECT: BaseClass="commandbutton" />

	ADD OBJECT 'edtCode' AS editbox WITH ;
		Anchor = 15, ;
		FontName = "Segoe UI", ;
		Height = 190, ;
		Left = 10, ;
		Name = "edtCode", ;
		TabIndex = 1, ;
		Top = 5, ;
		Width = 335
		*< END OBJECT: BaseClass="editbox" />
	
	PROCEDURE clear		&& Clears the edit box
		with This
			.edtCode.Value = ''
			.nCode = iif(empty(.aCode[1]), 0, alen(.aCode)) + 1
			.RefreshButtons()
			.edtCode.SetFocus()
		endwith
		
	ENDPROC

	PROCEDURE execute		&& Executes the code
		lparameters tlAllCode
		local lnLine, ;
			laLines[1], ;
			lcCode, ;
			loException as Exception, ;
			lnCode
		with This
		
		* If we're executing code immediately, get the line the cursor in on.
		* Otherwise, we'll execute everything in the edit box.
		
			if .lExecuteImmediately and not tlAllCode
				lnLine = occurs(ccCR, left(.edtCode.Value, .edtCode.SelStart)) + 1
				alines(laLines, .edtCode.Value)
				lcCode = laLines[lnLine]
			else
				lcCode = .edtCode.Value
			endif .lExecuteImmediately ...
		
		* Execute the code, sending any output to the screen.
		
			activate screen
			try
				execscript(lcCode)
			catch to loException
				messagebox('Error #' + transform(loException.ErrorNo) + ccCR + ;
					loException.Message, 16, 'Command Console')
			endtry
		
		* If we're not executing code immediately, add the code to the history buffer
		* and clear the edit box.
		
			if not .lExecuteImmediately
				lnCode = iif(empty(.aCode[1]), 0, alen(.aCode)) + 1
				dimension .aCode[lnCode]
				.aCode[lnCode] = .edtCode.Value
				.nCode         = lnCode + 1
				.edtCode.Value = ''
			endif not .lExecuteImmediately
			.RefreshButtons()
			.edtCode.SetFocus()
			.edtCode.SelStart = len(.edtCode.Value)
		endwith
		
	ENDPROC

	PROCEDURE getcode		&& Displays a code item
		with This
			.edtCode.Value = .aCode[.nCode]
			.RefreshButtons()
			.edtCode.SetFocus()
		endwith
		
	ENDPROC

	PROCEDURE Init
		with This
		
		* Grab the screen's or active form's icon.
		
			do case
				case not empty(.Icon)
				case type('_screen.ActiveForm.Name') = 'C' and ;
					pemstatus(_screen.ActiveForm, 'Icon', 5) and ;
					not empty(nvl(_screen.ActiveForm.Icon, ''))
					.Icon = _screen.ActiveForm.Icon
				otherwise
					.Icon = _screen.Icon
			endcase
		
		* Refresh the buttons.
		
			.RefreshButtons()
		endwith
		
	ENDPROC

	PROCEDURE refreshbuttons		&& Refreshes the command buttons
		with This
			.cmdExecute.Refresh()
			.cmdClear.Refresh()
			.cmdPrevious.Refresh()
			.cmdNext.Refresh()
		endwith
		
	ENDPROC

	PROCEDURE chkImmediate.InteractiveChange
		Thisform.edtCode.SetFocus()
		
	ENDPROC

	PROCEDURE cmdClear.Click
		Thisform.Clear()
		
	ENDPROC

	PROCEDURE cmdClear.Refresh
		This.Enabled = not empty(Thisform.edtCode.Text)
		
	ENDPROC

	PROCEDURE cmdExecute.Click
		Thisform.Execute(.T.)
		
	ENDPROC

	PROCEDURE cmdExecute.Refresh
		This.Enabled = not empty(Thisform.edtCode.Text)
		
	ENDPROC

	PROCEDURE cmdLoad.Click
		with Thisform
			lcFile = getfile('PRG;TXT')
			if not empty(lcFile)
				.edtCode.Value = filetostr(lcFile)
				.nCode = iif(empty(.aCode[1]), 0, alen(.aCode)) + 1
				.RefreshButtons()
				.edtCode.SetFocus()
			endif not empty(lcFile)
		endwith
		
	ENDPROC

	PROCEDURE cmdNext.Click
		with Thisform
			.nCode = .nCode + 1
			.GetCode()
		endwith
		
	ENDPROC

	PROCEDURE cmdNext.Refresh
		This.Enabled = Thisform.nCode < alen(Thisform.aCode)
		
	ENDPROC

	PROCEDURE cmdPrevious.Click
		with Thisform
			.nCode = .nCode - 1
			.GetCode()
		endwith
		
	ENDPROC

	PROCEDURE cmdPrevious.Refresh
		This.Enabled = Thisform.nCode > 1
		
	ENDPROC

	PROCEDURE edtCode.InteractiveChange
		Thisform.RefreshButtons()
		
	ENDPROC

	PROCEDURE edtCode.KeyPress
		lparameters tnKeyCode, ;
			tnShiftAltCtrl
		if tnKeyCode = 13 and Thisform.lExecuteImmediately
			Thisform.Execute()
			if right(This.Value, 1) = ccLF
				nodefault
			endif right(This.Value, 1) = ccLF
		endif tnKeyCode = 13 ...
		
	ENDPROC

ENDDEFINE
